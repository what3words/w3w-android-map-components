plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.dokka' version '1.5.0'
}

/**
 * IS_SNAPSHOT_RELEASE property will be automatically added to the root gradle.properties file by the CI pipeline, depending on the GitHub branch.
 * A snapshot release is generated for every pull request merged or commit made into an epic branch.
 */
def isSnapshotRelease = findProperty('IS_SNAPSHOT_RELEASE') == 'true'
def libVersion = isSnapshotRelease ? "${findProperty('VERSION_NAME')}-SNAPSHOT" : findProperty('VERSION_NAME')

apply from: 'maven-push.gradle'
apply from: '../jacoco.gradle'

android {
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    def filesToExclude = [
            '**/*SdkToApiExtensions*.kt',
            '**/*W3WSdkDataSource*.kt'
    ]

    tasks.withType(SourceTask.class).configureEach {
        it.exclude(filesToExclude)
    }
    android.sourceSets.main.kotlin.exclude(filesToExclude)

    buildTypes {
        debug {
            testCoverageEnabled = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildFeatures {
        viewBinding true
    }
    namespace 'com.what3words.map.components'
    tasks.dokkaGfm.configure {
        suppressObviousFunctions.set(true)
        suppressInheritedMembers.set(true)
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation "com.google.android.material:material:1.12.0"
    // what3words
    api "com.what3words:w3w-android-wrapper:4.0.2"
    api "com.what3words:w3w-android-api-sdk-bridge:1.0.8-SNAPSHOT"

    // Google maps
    compileOnly "com.google.android.gms:play-services-maps:19.0.0"
    compileOnly "com.google.maps.android:android-maps-utils:3.4.0"
    testImplementation "com.google.android.gms:play-services-maps:19.0.0"

    // Mapbox
    compileOnly "com.mapbox.maps:android:10.18.3"

    // kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.8.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"

    // Testing
    testImplementation "junit:junit:4.13.2"
    testImplementation "androidx.test:core:1.6.1"
    testImplementation "com.google.truth:truth:1.4.2"
    testImplementation "io.mockk:mockk:1.13.5"
    testImplementation "androidx.arch.core:core-testing:2.2.0"
}